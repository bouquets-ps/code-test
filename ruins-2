<!DOCTYPE html>
<html data-theme="light">
<head>
<title>PS! Game Corner Scripted Game Bits</title>
<link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Quicksand">
<script>
function calculateSettingAsThemeString({ localStorageTheme, systemSettingDark }) {
  if (localStorageTheme !== null) {
    return localStorageTheme;
  }

  if (systemSettingDark.matches) {
    return "dark";
  }

  return "light";
}

function updateButton({ buttonEl, isDark }) {
  const newCta = isDark ? "Light" : "Dark";
buttonEl.setAttribute("aria-label", newCta);
  buttonEl.innerText = newCta;
}

function updateThemeOnHtmlEl({ theme }) {
  document.querySelector("html").setAttribute("data-theme", theme);
}

const button = document.querySelector("[data-theme-toggle]");
const localStorageTheme = localStorage.getItem("theme");
const systemSettingDark = window.matchMedia("(prefers-color-scheme: dark)");

let currentThemeSetting = calculateSettingAsThemeString({ localStorageTheme, systemSettingDark });

updateButton({ buttonEl: button, isDark: currentThemeSetting === "dark" });
updateThemeOnHtmlEl({ theme: currentThemeSetting });

button.addEventListener("click", (event) => {
  const newTheme = currentThemeSetting === "dark" ? "light" : "dark";

  localStorage.setItem("theme", newTheme);
  updateButton({ buttonEl: button, isDark: newTheme === "dark" });
  updateThemeOnHtmlEl({ theme: newTheme });

  currentThemeSetting = newTheme;
});


document.getElementById("searchBar").addEventListener("input", function() {
    let filter = this.value.toLowerCase();
    let cards = document.querySelectorAll("#container .infobox");
    cards.forEach(card => {
        card.style.display = card.textContent.toLowerCase().includes(filter) ? "inline-block" : "none";
    });
});

</script>
<style>
td {
  vertical-align: middle;
}
body {
  font-family: "Quicksand", sans-serif;
  padding: 30px;
  background-color: var(--color-bg);
  color: var(--color-fg);
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease;
}
[data-theme="light"] {
   --color-bg: #ffffff;
   --color-fg: #000000;
  --transition-speed: 0.5s;
}
[data-theme="dark"] {
   --color-bg: #000000;
   --color-fg: #ffffff;
  --transition-speed: 0.5s;
}
button {
  font-family: "Quicksand", sans-serif;
  border: 1px solid var(--color-fg);
  border-radius: 5px;
  padding: 0.5rem 1rem;
  transition: all var(--global-transition-time) ease-in-out;
  color: var(--color-fg);
  background-color: var(--color-bg);
  transition: background-color var(--transition-speed) ease, color var(--transition-speed) ease;
}
.top-section {
  width: 100%;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  margin-bottom: 24px;
  position: relative;      
}
.center-button {
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
}
.search-bar {
  font-family: "Quicksand", sans-serif;
  border: 1px solid #2884c6;
  float: right;
  margin-right:50px;
  position:relative;
  padding: 8px 20px;
  border-radius: 5px;
  width: 15%;
  max-width: 180px;
  min-width: 150px;
  transition: all 0.3s ease-in-out;
  outline: none;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
}
.search-bar:focus {
  border-color: #2884c6;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.3);
}

        
/*@media (max-width: 700px) {*/
/*.top-section {*/
/*            width: 100%;*/
/*            display: flex;*/
/*    justify-content: center;*/
/*    align-items: center;*/
/*    align-content: space-between;*/
/*    flex-direction: column;*/
/*            margin-bottom: 24px;*/
/*            position: relative;*/
/*        }*/
/*        .search-bar {*/
/*            border: 2px solid #3b82f6;*/
/*            position:relative;*/
/*  align-self: center;*/
/*            padding: 8px 20px;*/
/*            border-radius: 16px;*/
/*            width: 15%;*/
/*            max-width: 180px;*/
/*            min-width: 150px;*/
/*            transition: all 0.3s ease-in-out;*/
/*            outline: none;*/
/*            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);*/
/*        }    */
/*          .center-button {*/
/*          position: relative;*/
/*  align-self: center;*/
/*}*/
/*}*/
</style>
</head>
<body>
<center>
<h1><table><tr><td>PS! Game Corner Scripted Game Bits</td></tr></table></h1>
<hr><br>
<center>

<div class="top-section">
  <button
      type="button"
      data-theme-toggle
      aria-label="Light"
      class = "center-button"
    >Light</button>
    <input type="text" id="searchBar" class="search-bar" placeholder="Type to search...">
</div>
<br><br>

<div id = "container">

<span class="infobox">
<table width="600px" border="2" style="text-align: center" cellpadding="5">
<tr><td colspan="2">
<br><img src="//play.pokemonshowdown.com/sprites/ani/darkrai.gif">
<h4>Darkrai's Lair</h4></td></tr>
<tr><td width="300px"><b>Win</b></td><td width="300px"><b>Lose</b></td></tr>
<tr><td colspan="2"><i>To be updated</i></td></tr>
</table></span>

<span class="infobox">
<table width="600px" border="2" style="text-align: center" cellpadding="5">
<tr><td colspan="2">
<br><img src="//play.pokemonshowdown.com/sprites/ani/electrode.gif">
<h4>Electrode's Minefield</h4></td></tr>
<tr><td width="300px"><b>Win</b></td><td width="300px"><b>Lose</b></td></tr>
<tr><td>(1/4) bit per fragment<br><i>Round to the nearest integer</i><br><i><font color="cb99c9">250 bits minimum if you earned at least 1 fragment</font></i><br><i><font color="a2bffe">500 bits maximum</font></i></td><td>0 bits</td></tr>
</table></span>

<span class="infobox">
<table width="600px" border="2" style="text-align: center" cellpadding="5">
<tr><td colspan="2">
<br><img src="//play.pokemonshowdown.com/sprites/ani/haunter.gif">
<h4>Haunter's Haunted House</h4></td></tr>
<tr><td width="300px"><b>Win</b></td><td width="300px"><b>Lose</b></td></tr>
<tr><td>1 bit per 6 candies<br><i><font color="cb99c9">200 bits minimum</font></i><br><i><font color="a2bffe">500 bits maximum</font></i></td><td>1 bit per 9 candies</td></tr>
</table></span>

<span class="infobox">
<table width="600px" border="2" style="text-align: center" cellpadding="5">
<tr><td colspan="2">
<br><img src="//play.pokemonshowdown.com/sprites/ani/klinklang.gif">
<h4>Klinklang's Castle</h4></td></tr>
<tr><td width="300px"><b>Win</b></td><td width="300px"><b>Lose</b></td></tr>
<tr><td>(1/4) bit per gear<br><i>Round to the nearest integer</i><br><i><font color="cb99c9">250 bits minimum if you earned at least 1 gear</font></i><br><i><font color="a2bffe">500 bits maximum</font></i></td><td>0 bits</td></tr>
</table></span>

<span class="infobox">
<table width="600px" border="2" style="text-align: center" cellpadding="5">
<tr><td colspan="2">
<br><img src="//play.pokemonshowdown.com/sprites/ani/lampent.gif">
<h4>Lampent's Labyrinth</h4></td></tr>
<tr><td width="300px"><b>Win</b></td><td width="300px"><b>Lose</b></td></tr>
<tr><td>(1/4) bit per wick<br><i>Round to the nearest integer</i><br><i><font color="cb99c9">250 bits minimum if you earned at least 1 wick</font></i><br><i><font color="a2bffe">500 bits maximum</font></i></td><td>0 bits</td></tr>
</table></span>

<span class="infobox">
<table width="600px" border="2" style="text-align: center" cellpadding="5">
<tr><td colspan="2">
<br><img src="//play.pokemonshowdown.com/sprites/ani/persian.gif">
<h4>Persian's Garden</h4></td></tr>
<tr><td width="300px"><b>Win</b></td><td width="300px"><b>Lose</b></td></tr>
<tr><td colspan="2">(1/6) bit per coin<br><i>Round to the nearest integer</i><br><i><font color="a2bffe">500 bits maximum</font></i></td></tr>
</table></span>

</div>

</center>
</body>
</html>

